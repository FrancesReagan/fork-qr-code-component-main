This is a solution to the Developing with Bootstrap--using the [QR code component challenge on Frontend Mentor](https://www.frontendmentor.io/challenges/qr-code-component-iux_sIO_H). Frontend Mentor challenges help you improve your coding skills by building realistic projects. 
Table of Contents:
  - Link to solution
  - My Process
  - What I learned
  - Acknowledgments
  - GitHub link

Link to solution:
http://127.0.0.1:5501/index.html

My Process: 
  I collaborated with our teacher and students for how to start using Bootstrap and Refactoring the existing QR-Code-component site with bootstrap
  *Built with: 
  - Semantic HTML5 markup
  - CSS custom properties
  - Bootstrap


What I learned:
  Bootstrap in some ways makes coding items that don't need customization very efficient; the break down came when trying to use the standard bootstrap utility classes and components
to make a specific design--that is a custom design---going back to trying to refactor a pre-existing custom design proved challenging.

Acknowledgments: Abraham E. Tavarez (Per Scholas teacher) and 2025-RTT-23 Cohort

https://github.com/FrancesReagan
-------------------------------------------------
Reflections Questions and Answers

Reflections on Mod3Lab3--DEVELOPING with BOOTSTRAP 
Challenges When Refactoring to Bootstrap
Understanding and implementing the Bootstrap grid system is still a challenge for me. Getting the hang of containers, rows, and columns with all their breakpoints took practice, and I'd often end up with unexpected layouts or weird nesting issues.
Getting used to Bootstrap's naming conventions is another interesting hurdle---as in someways it was intuitive â€“like the padding and margin and such was easy for meâ€”the manipulating text the typography was not as flexible as I would have liked. I kept wanting to write my custom css to avoid bootstrapâ€”but I tried itðŸ˜Š.
As stated above Bootstrap's built-in spacing or colors didn't quite match what I needed, so I'd end up with a mix of Bootstrap classes and custom CSS.
Refactoring existing projects meant dealing with class name conflicts where my custom .container class suddenly had different behavior.
How Bootstrap Simplified Styling
Bootstrap's utility classes and components made styling WAY easier by:
Letting me avoid writing repetitive CSS for common patterns 
Ideally, if I were more adept at it-- the grid system and responsive utilities would make creating a responsive design almost automatic.
When I'd Skip Bootstrap for Custom CSS
I'd go with custom CSS instead of Bootstrap when:
Working on a highly custom design where fighting against Bootstrap's opinions would take more time than writing from scratch
Building specialized UI components that would require heavy Bootstrap customization anyway
Working with a team that's already established a different CSS methodology (like Tailwind or a custom design system)



